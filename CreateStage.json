{
    "openapi": "3.0.0",
    "info": {
        "title": "ZohoCommandCenter API Create journey stages API",
        "version": "1.0.0",
        "description": "API to create and define stage without actions"
    },
    "paths": {
        "/commandcenter/v1/journeys/{journey_id}/stages": {
            "post": {
                "summary": "Create a stage within a journey",
                "description": "Write-only API for creating stages",
                "operationId": "createStage",
                "tags": [
                    "Journey Stages"
                ],
                "parameters": [
                    {
                        "name": "journey_id",
                        "in": "path",
                        "description": "ID of the journey",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StagePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                },
                                "example": {
                                    "stages": [
                                        {
                                            "code": "SUCCESS",
                                            "details": {
                                                "id": "1000000069001"
                                            },
                                            "message": "Stage created successfully",
                                            "status": "success"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation errors for stages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestResponse"
                                },
                                "example": {
                                    "stages": [
                                        {
                                            "code": "INVALID_DATA",
                                            "details": {
                                                "api_name": "name",
                                                "json_path": "$.stages[0].name"
                                            },
                                            "message": "The given field must not be null or empty",
                                            "status": "error"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StagePayload": {
                "type": "object",
                "properties": {
                    "stages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Stage"
                        }
                    }
                }
            },
            "Stage": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9 ]*$",
                        "maxLength": 30,
                        "description": "Name of a stage"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 1000,
                        "description": "A brief description about the stage"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "standard",
                            "neutral",
                            "failure",
                            "success"
                        ]
                    },
                    "end_stage": {
                        "type": "boolean"
                    }
                }
            },
            "SuccessResponse": {
                "type": "object",
                "properties": {
                    "stages": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "details": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "BadRequestResponse": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": [
                            "stages"
                        ],
                        "properties": {
                            "stages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StageError"
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/NotAllowedError"
                    }
                ]
            },
            "ErrorDetail": {
                "type": "object",
                "required": [
                    "api_name",
                    "json_path"
                ],
                "properties": {
                    "api_name": {
                        "type": "string"
                    },
                    "json_path": {
                        "type": "string"
                    }
                }
            },
            "ErrorDetailWithLimit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ErrorDetail"
                    },
                    {
                        "type": "object",
                        "required": [
                            "limit"
                        ],
                        "properties": {
                            "limit": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "StageError": {
                "type": "object",
                "required": [
                    "code",
                    "message",
                    "status",
                    "details"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATA",
                            "LIMIT_EXCEEDED",
                            "DUPLICATE_DATA",
                            "MANDATORY_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    },
                    "details": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ErrorDetail"
                            },
                            {
                                "$ref": "#/components/schemas/ErrorDetailWithLimit"
                            }
                        ]
                    }
                }
            },
            "NotAllowedError": {
                "type": "object",
                "required": [
                    "code",
                    "message",
                    "status",
                    "details"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "enum": [
                            "NOT_ALLOWED"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "error"
                        ]
                    },
                    "details": {
                        "type": "object",
                        "required": [
                            "resource_path_index"
                        ],
                        "properties": {
                            "resource_path_index": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    }
}
