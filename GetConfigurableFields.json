{
  "openapi": "3.0.0",
  "info": {
    "title": "Get Configurable Fields",
    "version": "1.0.0",
    "description": "API to fetch configurable fields for transitions."
  },
  "paths": {
    "/v1/configurable_fields": {
      "get": {
        "summary": "Get Configurable Fields",
        "operationId": "getConfigurableFields",
        "tags": [
          "Configurable Fields"
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConfigurableFieldsResponse"
          },
          "400": {
            "$ref": "#/components/responses/InvalidDataErrorResponse"
          }
        },
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Page number for pagination."
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Number of items per page."
          },
          {
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Encoded filter string to apply filters on the response."
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigurableField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource."
          },
          "name": {
            "type": "string",
            "description": "Name or display name of the resource."
          },
          "transition": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the resource."
              },
              "name": {
                "type": "string",
                "description": "Name or display name of the resource."
              }
            },
            "description": "Transition that the configurable field belongs to."
          },
          "trigger": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the resource."
              },
              "name": {
                "type": "string",
                "description": "Name or display name of the resource."
              }
            },
            "description": "Trigger that caused the configuration."
          },
          "signal": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier of the resource."
              },
              "name": {
                "type": "string",
                "description": "Name or display name of the resource."
              },
              "api_name": {
                "type": "string",
                "description": "API name used to identify the field programmatically."
              }
            },
            "description": "Signal associated with the configuration."
          },
          "api_name": {
            "type": "string",
            "description": "API name used to identify the field programmatically."
          },
          "ui_type": {
            "type": "integer",
            "description": "UI type used for rendering the field."
          },
          "data_type": {
            "type": "string",
            "description": "Data type of the configurable field."
          }
        }
      },
      "ConfigurableFieldsResponse": {
        "type": "object",
        "properties": {
          "configurable_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigurableField"
            }
          },
          "info": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "description": "Current page number in the paginated response."
              },
              "count": {
                "type": "integer",
                "description": "Number of records returned in the current page."
              },
              "per_page": {
                "type": "integer",
                "description": "Maximum number of records per page."
              },
              "more_records": {
                "type": "boolean",
                "description": "Indicates if more records are available beyond the current page."
              }
            }
          }
        }
      },
      "GetConfigurableFieldsResponse": {
        "example": {
          "configurable_fields": [
            {
              "id": "1000000086099",
              "name": "Owner",
              "transition": {
                "id": "1000000085001",
                "name": "transition 1"
              },
              "trigger": {
                "id": "1000000086097",
                "name": "RecordUpdate"
              },
              "signal": {
                "id": "2393000000009015",
                "name": "RecordUpdate",
                "api_name": "lead_updated"
              },
              "api_name": "transition_1_Trigger_RecordUpdate_Lead_Owner",
              "ui_type": 8,
              "data_type": "ownerlookup"
            }
          ],
          "info": {
            "page": 1,
            "count": 1,
            "per_page": 200,
            "more_records": false
          }
        }
      },
      "ErrorDetails": {
        "type": "object",
        "properties": {
          "resource_path_index": {
            "type": "string",
            "description": "Index of the resource in the input array where the error occurred."
          }
        },
        "required": [
          "resource_path_index"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INVALID_DATA"
            ],
            "description": "Error code indicating the type of failure."
          },
          "message": {
            "type": "string",
            "description": "A human-readable explanation of the error."
          },
          "details": {
            "$ref": "#/components/schemas/ErrorDetails"
          },
          "status": {
            "type": "string",
            "enum": [
              "error"
            ],
            "description": "Status of the response, always 'error' for failed requests."
          }
        },
        "required": [
          "code",
          "message",
          "details",
          "status"
        ]
      }
    },
    "responses": {
      "ConfigurableFieldsResponse": {
        "description": "Successful response with configurable fields",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConfigurableFieldsResponse"
            }
          }
        }
      },
      "InvalidDataErrorResponse": {
        "description": "Invalid input was provided.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "InvalidData": {
                "summary": "Invalid data error example",
                "value": {
                  "code": "INVALID_DATA",
                  "message": "The given field seems to be invalid",
                  "details": {
                    "resource_path_index": "1"
                  },
                  "status": "error"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "iam-oauth2-schema": [
        "ZohoCommandCenter.journeys.READ"
      ]
    }
  ]
}
